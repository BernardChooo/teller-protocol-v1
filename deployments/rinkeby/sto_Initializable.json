{
  "address": "0x15F42E2655613246add1e7F4e970F3f85743a00c",
  "abi": [],
  "transactionHash": "0x9b342743934fcf1a1962c22656104f30172295a10120cdc20dae36df16d5ae3f",
  "receipt": {
    "to": null,
    "from": "0xAFe87013dc96edE1E116a288D80FcaA0eFFE5fe5",
    "contractAddress": "0x15F42E2655613246add1e7F4e970F3f85743a00c",
    "transactionIndex": 3,
    "gasUsed": "67066",
    "logsBloom": "0x
    "blockHash": "0xfc44297dbfb0bc596a02f9a746039029bb9440ed01ceba49d10da9a0719506bc",
    "transactionHash": "0x9b342743934fcf1a1962c22656104f30172295a10120cdc20dae36df16d5ae3f",
    "logs": [],
    "blockNumber": 8363137,
    "cumulativeGasUsed": "180230",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "5c6a9058c46611581868a70d5eba78f6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"diamonds/contexts/initializable/storage.sol\":\"sto_Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"diamonds/contexts/initializable/storage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract sto_Initializable {\\n    struct InitializableLayout {\\n        bool initialized;\\n    }\\n\\n    bytes32 internal constant INITIALIZABLE_STORAGE_POSITION =\\n        keccak256(abi.encode(\\\"teller_protocol.context.initializable.v1\\\"));\\n\\n    function initializableStorage()\\n        internal\\n        pure\\n        returns (InitializableLayout storage l_)\\n    {\\n        bytes32 position = INITIALIZABLE_STORAGE_POSITION;\\n\\n        assembly {\\n            l_.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f5031385df5132017a84f53744755f78df94ea99560137b36cb85d89f7365c3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e36c094210c34bbcd215a7fd7f043ce95eba7ddda0f597b60d8b69d99223d30d64736f6c63430008030033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220e36c094210c34bbcd215a7fd7f043ce95eba7ddda0f597b60d8b69d99223d30d64736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
